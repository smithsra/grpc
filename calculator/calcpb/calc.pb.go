// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calcpb/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NumsToAdd struct {
	FirstNum             int32    `protobuf:"varint,1,opt,name=first_num,json=firstNum,proto3" json:"first_num,omitempty"`
	SecondNum            int32    `protobuf:"varint,2,opt,name=second_num,json=secondNum,proto3" json:"second_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumsToAdd) Reset()         { *m = NumsToAdd{} }
func (m *NumsToAdd) String() string { return proto.CompactTextString(m) }
func (*NumsToAdd) ProtoMessage()    {}
func (*NumsToAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{0}
}

func (m *NumsToAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumsToAdd.Unmarshal(m, b)
}
func (m *NumsToAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumsToAdd.Marshal(b, m, deterministic)
}
func (m *NumsToAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumsToAdd.Merge(m, src)
}
func (m *NumsToAdd) XXX_Size() int {
	return xxx_messageInfo_NumsToAdd.Size(m)
}
func (m *NumsToAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_NumsToAdd.DiscardUnknown(m)
}

var xxx_messageInfo_NumsToAdd proto.InternalMessageInfo

func (m *NumsToAdd) GetFirstNum() int32 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *NumsToAdd) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

// Request message
type SumRequest struct {
	Input                *NumsToAdd `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{1}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetInput() *NumsToAdd {
	if m != nil {
		return m.Input
	}
	return nil
}

// Response message
type SumResponse struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{2}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*NumsToAdd)(nil), "calculator.NumsToAdd")
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
}

func init() {
	proto.RegisterFile("calculator/calcpb/calc.proto", fileDescriptor_cfc74e58bc0fa04b)
}

var fileDescriptor_cfc74e58bc0fa04b = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x49, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0xd2, 0x07, 0x31, 0x0b, 0x92, 0xc0, 0x94, 0x5e, 0x41, 0x51,
	0x7e, 0x49, 0xbe, 0x10, 0x17, 0x42, 0x56, 0xc9, 0x9d, 0x8b, 0xd3, 0xaf, 0x34, 0xb7, 0x38, 0x24,
	0xdf, 0x31, 0x25, 0x45, 0x48, 0x9a, 0x8b, 0x33, 0x2d, 0xb3, 0xa8, 0xb8, 0x24, 0x3e, 0xaf, 0x34,
	0x57, 0x82, 0x51, 0x81, 0x51, 0x83, 0x35, 0x88, 0x03, 0x2c, 0x00, 0x54, 0x22, 0x24, 0xcb, 0xc5,
	0x55, 0x9c, 0x9a, 0x9c, 0x9f, 0x97, 0x02, 0x96, 0x65, 0x02, 0xcb, 0x72, 0x42, 0x44, 0x80, 0xd2,
	0x4a, 0x96, 0x5c, 0x5c, 0xc1, 0xa5, 0xb9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xda,
	0x5c, 0xac, 0x99, 0x79, 0x05, 0xa5, 0x25, 0x60, 0x53, 0xb8, 0x8d, 0x44, 0xf5, 0x10, 0x56, 0xea,
	0xc1, 0xed, 0x0b, 0x82, 0xa8, 0x51, 0x52, 0xe6, 0xe2, 0x06, 0x6b, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b,
	0x4e, 0x15, 0x12, 0xe1, 0x62, 0x2d, 0xc9, 0x2f, 0x49, 0xcc, 0x81, 0xba, 0x00, 0xc2, 0x31, 0xf2,
	0xe0, 0xe2, 0x76, 0x06, 0x9a, 0x11, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc9, 0xc5,
	0x02, 0xe2, 0x0a, 0x89, 0x21, 0x9b, 0x8c, 0x70, 0x80, 0x94, 0x38, 0x86, 0x38, 0xc4, 0x74, 0x25,
	0x06, 0x27, 0x8e, 0x28, 0x36, 0x48, 0x98, 0x24, 0xb1, 0x81, 0xc3, 0xc3, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x2a, 0xbf, 0x82, 0xe6, 0x2f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalcServiceClient is the client API for CalcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcServiceClient interface {
	// Unary API
	// Create an rpc that takes a AddUp and returns a SumResponse
	Calc(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
}

type calcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalcServiceClient(cc grpc.ClientConnInterface) CalcServiceClient {
	return &calcServiceClient{cc}
}

func (c *calcServiceClient) Calc(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalcService/Calc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalcServiceServer is the server API for CalcService service.
type CalcServiceServer interface {
	// Unary API
	// Create an rpc that takes a AddUp and returns a SumResponse
	Calc(context.Context, *SumRequest) (*SumResponse, error)
}

// UnimplementedCalcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalcServiceServer struct {
}

func (*UnimplementedCalcServiceServer) Calc(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calc not implemented")
}

func RegisterCalcServiceServer(s *grpc.Server, srv CalcServiceServer) {
	s.RegisterService(&_CalcService_serviceDesc, srv)
}

func _CalcService_Calc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServiceServer).Calc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalcService/Calc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServiceServer).Calc(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalcService",
	HandlerType: (*CalcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calc",
			Handler:    _CalcService_Calc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/calcpb/calc.proto",
}
